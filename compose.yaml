services:
  eqproxy-io:
    build:
      context: .
      dockerfile: ./server/eqproxy-io/Dockerfile
      args:
        NODE_VERSION: 20.11.1
    env_file:
      - .env
    environment:
      - TZ=Asia/Tokyo
      - PORT=4000
    restart: always
    ports:
      # ws.api.eqmonitor.app
      - 4000:4000
      # Prometheus metrics
      - 4002:4002
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: '3'

  dmdata-proxy:
    build:
      context: .
      dockerfile: ./service/dmdata-proxy/Dockerfile
    env_file:
      - ./service/dmdata-proxy/.env
    environment:
      - TZ=Asia/Tokyo
      - WEBSOCKET_PORT=4020
      - NEW_RELIC_APP_NAME=dmdata-proxy
    restart: always
    ports:
      - 4020:4020
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: '3'
    healthcheck:
      test: ["CMD", "curl", "http://localhost:4020/health"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 30s

  supabase-proxy:
    build: ./service/supabase-proxy
    env_file:
      - ./service/supabase-proxy/.env
    environment:
      - TZ=Asia/Tokyo
      - PORT=4010
    restart: always
    ports:
      - 4010:4010
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: '3'
    healthcheck:
      test: ["CMD", "curl", "http://localhost:4010/health"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 30s

  telegram-proxy-server:
    build: ./server/telegram-proxy-server
    env_file:
      - ./server/telegram-proxy-server/.env
    environment:
      - TZ=Asia/Tokyo
      - PORT=4030
      - SUPABASE_PROXY_URL=ws://supabase-proxy:4010/ws
      - DMDATA_PROXY_URL=ws://dmdata-proxy:4020/ws
    restart: always
    depends_on:
      supabase-proxy:
        condition: service_healthy
      dmdata-proxy:
        condition: service_healthy
    ports:
      - 4030:4030
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: '3'
    healthcheck:
      test: ["CMD", "curl", "http://localhost:4030/health"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 30s