// @generated by protoc-gen-es v1.9.0 with parameter "target=ts"
// @generated from file notification_payload.proto (syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";

/**
 * @generated from message NotificationPayload
 */
export class NotificationPayload extends Message<NotificationPayload> {
  /**
   * @generated from field: string event_id = 1;
   */
  eventId = "";

  /**
   * @generated from field: NotificationPayload.Type type = 2;
   */
  type = NotificationPayload_Type.UNSPECIFIED;

  /**
   * @generated from oneof NotificationPayload.information
   */
  information: {
    /**
     * @generated from field: NotificationPayload.EewInformation eew_information = 3;
     */
    value: NotificationPayload_EewInformation;
    case: "eewInformation";
  } | {
    /**
     * @generated from field: NotificationPayload.EarthquakeInformation earthquake_information = 4;
     */
    value: NotificationPayload_EarthquakeInformation;
    case: "earthquakeInformation";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<NotificationPayload>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "NotificationPayload";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "event_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "type", kind: "enum", T: proto3.getEnumType(NotificationPayload_Type) },
    { no: 3, name: "eew_information", kind: "message", T: NotificationPayload_EewInformation, oneof: "information" },
    { no: 4, name: "earthquake_information", kind: "message", T: NotificationPayload_EarthquakeInformation, oneof: "information" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NotificationPayload {
    return new NotificationPayload().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NotificationPayload {
    return new NotificationPayload().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NotificationPayload {
    return new NotificationPayload().fromJsonString(jsonString, options);
  }

  static equals(a: NotificationPayload | PlainMessage<NotificationPayload> | undefined, b: NotificationPayload | PlainMessage<NotificationPayload> | undefined): boolean {
    return proto3.util.equals(NotificationPayload, a, b);
  }
}

/**
 * @generated from enum NotificationPayload.Type
 */
export enum NotificationPayload_Type {
  /**
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: TYPE_EARTHQUAKE = 1;
   */
  EARTHQUAKE = 1,

  /**
   * @generated from enum value: TYPE_EEW = 2;
   */
  EEW = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(NotificationPayload_Type)
proto3.util.setEnumType(NotificationPayload_Type, "NotificationPayload.Type", [
  { no: 0, name: "TYPE_UNSPECIFIED" },
  { no: 1, name: "TYPE_EARTHQUAKE" },
  { no: 2, name: "TYPE_EEW" },
]);

/**
 * @generated from enum NotificationPayload.JmaIntensity
 */
export enum NotificationPayload_JmaIntensity {
  /**
   * @generated from enum value: JMA_INTENSITY_UNSPECIFIED = 0;
   */
  JMA_INTENSITY_UNSPECIFIED = 0,

  /**
   * @generated from enum value: JMA_INTENSITY_0 = 10;
   */
  JMA_INTENSITY_0 = 10,

  /**
   * @generated from enum value: JMA_INTENSITY_1 = 20;
   */
  JMA_INTENSITY_1 = 20,

  /**
   * @generated from enum value: JMA_INTENSITY_2 = 30;
   */
  JMA_INTENSITY_2 = 30,

  /**
   * @generated from enum value: JMA_INTENSITY_3 = 40;
   */
  JMA_INTENSITY_3 = 40,

  /**
   * @generated from enum value: JMA_INTENSITY_4 = 45;
   */
  JMA_INTENSITY_4 = 45,

  /**
   * @generated from enum value: JMA_INTENSITY_5_MINUS = 50;
   */
  JMA_INTENSITY_5_MINUS = 50,

  /**
   * @generated from enum value: JMA_INTENSITY_5_PLUS = 55;
   */
  JMA_INTENSITY_5_PLUS = 55,

  /**
   * @generated from enum value: JMA_INTENSITY_6_MINUS = 60;
   */
  JMA_INTENSITY_6_MINUS = 60,

  /**
   * @generated from enum value: JMA_INTENSITY_6_PLUS = 65;
   */
  JMA_INTENSITY_6_PLUS = 65,

  /**
   * @generated from enum value: JMA_INTENSITY_7 = 70;
   */
  JMA_INTENSITY_7 = 70,
}
// Retrieve enum metadata with: proto3.getEnumType(NotificationPayload_JmaIntensity)
proto3.util.setEnumType(NotificationPayload_JmaIntensity, "NotificationPayload.JmaIntensity", [
  { no: 0, name: "JMA_INTENSITY_UNSPECIFIED" },
  { no: 10, name: "JMA_INTENSITY_0" },
  { no: 20, name: "JMA_INTENSITY_1" },
  { no: 30, name: "JMA_INTENSITY_2" },
  { no: 40, name: "JMA_INTENSITY_3" },
  { no: 45, name: "JMA_INTENSITY_4" },
  { no: 50, name: "JMA_INTENSITY_5_MINUS" },
  { no: 55, name: "JMA_INTENSITY_5_PLUS" },
  { no: 60, name: "JMA_INTENSITY_6_MINUS" },
  { no: 65, name: "JMA_INTENSITY_6_PLUS" },
  { no: 70, name: "JMA_INTENSITY_7" },
]);

/**
 * @generated from message NotificationPayload.EewInformation
 */
export class NotificationPayload_EewInformation extends Message<NotificationPayload_EewInformation> {
  /**
   * @generated from field: NotificationPayload.HypoInformation hypo_information = 1;
   */
  hypoInformation?: NotificationPayload_HypoInformation;

  /**
   * @generated from field: optional NotificationPayload.JmaIntensity max_intensity = 2;
   */
  maxIntensity?: NotificationPayload_JmaIntensity;

  /**
   * @generated from field: repeated NotificationPayload.EewRegionIntensity region_intensities = 3;
   */
  regionIntensities: NotificationPayload_EewRegionIntensity[] = [];

  constructor(data?: PartialMessage<NotificationPayload_EewInformation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "NotificationPayload.EewInformation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "hypo_information", kind: "message", T: NotificationPayload_HypoInformation },
    { no: 2, name: "max_intensity", kind: "enum", T: proto3.getEnumType(NotificationPayload_JmaIntensity), opt: true },
    { no: 3, name: "region_intensities", kind: "message", T: NotificationPayload_EewRegionIntensity, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NotificationPayload_EewInformation {
    return new NotificationPayload_EewInformation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NotificationPayload_EewInformation {
    return new NotificationPayload_EewInformation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NotificationPayload_EewInformation {
    return new NotificationPayload_EewInformation().fromJsonString(jsonString, options);
  }

  static equals(a: NotificationPayload_EewInformation | PlainMessage<NotificationPayload_EewInformation> | undefined, b: NotificationPayload_EewInformation | PlainMessage<NotificationPayload_EewInformation> | undefined): boolean {
    return proto3.util.equals(NotificationPayload_EewInformation, a, b);
  }
}

/**
 * @generated from message NotificationPayload.EarthquakeInformation
 */
export class NotificationPayload_EarthquakeInformation extends Message<NotificationPayload_EarthquakeInformation> {
  /**
   * @generated from field: NotificationPayload.HypoInformation hypo_information = 1;
   */
  hypoInformation?: NotificationPayload_HypoInformation;

  /**
   * @generated from field: optional NotificationPayload.JmaIntensity max_intensity = 2;
   */
  maxIntensity?: NotificationPayload_JmaIntensity;

  /**
   * @generated from field: repeated NotificationPayload.RegionIntensity region_intensities = 3;
   */
  regionIntensities: NotificationPayload_RegionIntensity[] = [];

  constructor(data?: PartialMessage<NotificationPayload_EarthquakeInformation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "NotificationPayload.EarthquakeInformation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "hypo_information", kind: "message", T: NotificationPayload_HypoInformation },
    { no: 2, name: "max_intensity", kind: "enum", T: proto3.getEnumType(NotificationPayload_JmaIntensity), opt: true },
    { no: 3, name: "region_intensities", kind: "message", T: NotificationPayload_RegionIntensity, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NotificationPayload_EarthquakeInformation {
    return new NotificationPayload_EarthquakeInformation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NotificationPayload_EarthquakeInformation {
    return new NotificationPayload_EarthquakeInformation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NotificationPayload_EarthquakeInformation {
    return new NotificationPayload_EarthquakeInformation().fromJsonString(jsonString, options);
  }

  static equals(a: NotificationPayload_EarthquakeInformation | PlainMessage<NotificationPayload_EarthquakeInformation> | undefined, b: NotificationPayload_EarthquakeInformation | PlainMessage<NotificationPayload_EarthquakeInformation> | undefined): boolean {
    return proto3.util.equals(NotificationPayload_EarthquakeInformation, a, b);
  }
}

/**
 * @generated from message NotificationPayload.RegionIntensity
 */
export class NotificationPayload_RegionIntensity extends Message<NotificationPayload_RegionIntensity> {
  /**
   * @generated from field: string code = 1;
   */
  code = "";

  /**
   * @generated from field: NotificationPayload.JmaIntensity intensity = 2;
   */
  intensity = NotificationPayload_JmaIntensity.JMA_INTENSITY_UNSPECIFIED;

  constructor(data?: PartialMessage<NotificationPayload_RegionIntensity>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "NotificationPayload.RegionIntensity";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "intensity", kind: "enum", T: proto3.getEnumType(NotificationPayload_JmaIntensity) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NotificationPayload_RegionIntensity {
    return new NotificationPayload_RegionIntensity().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NotificationPayload_RegionIntensity {
    return new NotificationPayload_RegionIntensity().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NotificationPayload_RegionIntensity {
    return new NotificationPayload_RegionIntensity().fromJsonString(jsonString, options);
  }

  static equals(a: NotificationPayload_RegionIntensity | PlainMessage<NotificationPayload_RegionIntensity> | undefined, b: NotificationPayload_RegionIntensity | PlainMessage<NotificationPayload_RegionIntensity> | undefined): boolean {
    return proto3.util.equals(NotificationPayload_RegionIntensity, a, b);
  }
}

/**
 * @generated from message NotificationPayload.EewRegionIntensity
 */
export class NotificationPayload_EewRegionIntensity extends Message<NotificationPayload_EewRegionIntensity> {
  /**
   * @generated from field: string code = 1;
   */
  code = "";

  /**
   * @generated from field: NotificationPayload.JmaIntensity intensity = 2;
   */
  intensity = NotificationPayload_JmaIntensity.JMA_INTENSITY_UNSPECIFIED;

  /**
   * @generated from field: optional google.protobuf.Timestamp arrival_time = 3;
   */
  arrivalTime?: Timestamp;

  constructor(data?: PartialMessage<NotificationPayload_EewRegionIntensity>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "NotificationPayload.EewRegionIntensity";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "intensity", kind: "enum", T: proto3.getEnumType(NotificationPayload_JmaIntensity) },
    { no: 3, name: "arrival_time", kind: "message", T: Timestamp, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NotificationPayload_EewRegionIntensity {
    return new NotificationPayload_EewRegionIntensity().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NotificationPayload_EewRegionIntensity {
    return new NotificationPayload_EewRegionIntensity().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NotificationPayload_EewRegionIntensity {
    return new NotificationPayload_EewRegionIntensity().fromJsonString(jsonString, options);
  }

  static equals(a: NotificationPayload_EewRegionIntensity | PlainMessage<NotificationPayload_EewRegionIntensity> | undefined, b: NotificationPayload_EewRegionIntensity | PlainMessage<NotificationPayload_EewRegionIntensity> | undefined): boolean {
    return proto3.util.equals(NotificationPayload_EewRegionIntensity, a, b);
  }
}

/**
 * @generated from message NotificationPayload.HypoInformation
 */
export class NotificationPayload_HypoInformation extends Message<NotificationPayload_HypoInformation> {
  /**
   * @generated from field: int32 code = 1;
   */
  code = 0;

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: float latitude = 3;
   */
  latitude = 0;

  /**
   * @generated from field: float longitude = 4;
   */
  longitude = 0;

  /**
   * @generated from field: int32 depth = 5;
   */
  depth = 0;

  /**
   * @generated from field: float magnitude = 6;
   */
  magnitude = 0;

  constructor(data?: PartialMessage<NotificationPayload_HypoInformation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "NotificationPayload.HypoInformation";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "code", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "latitude", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 4, name: "longitude", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 5, name: "depth", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 6, name: "magnitude", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NotificationPayload_HypoInformation {
    return new NotificationPayload_HypoInformation().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NotificationPayload_HypoInformation {
    return new NotificationPayload_HypoInformation().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NotificationPayload_HypoInformation {
    return new NotificationPayload_HypoInformation().fromJsonString(jsonString, options);
  }

  static equals(a: NotificationPayload_HypoInformation | PlainMessage<NotificationPayload_HypoInformation> | undefined, b: NotificationPayload_HypoInformation | PlainMessage<NotificationPayload_HypoInformation> | undefined): boolean {
    return proto3.util.equals(NotificationPayload_HypoInformation, a, b);
  }
}

